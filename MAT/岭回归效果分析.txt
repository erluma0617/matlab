#导入相关包
from sklearn.linear_model import Ridge,LinearRegression
from sklearn.model_selection import train_test_split 
import matplotlib.pyplot as plt
import mglearn

# 导入数据
X,y = mglearn.datasets.load_extended_boston()
# 划分训练集和测试集
X_train,X_test,y_train,y_test = train_test_split(X,y,random_state=42)
# 三个岭回归和一个线性回归模型
ridge = Ridge().fit(X_train,y_train)
ridge10 = Ridge(alpha=10,).fit(X_train,y_train)
ridge01 = Ridge(alpha=0.1).fit(X_train,y_train)
lr = LinearRegression().fit(X_train,y_train)
# 打印ridge函数的信息
print ("training set score:{:.2f}".format(ridge.score(X_train,y_train)))
print ("test set score:{:.2f}".format(ridge.score(X_test,y_test)))

# 绘制三个岭回归和线性回归的准确率曲线
plt.figure(figsize = (7,7))
plt.plot(ridge.coef_,'s',label = "Ridge alpha=1")
plt.plot(ridge10.coef_,'^',label = "Ridge alpha=10")
plt.plot(ridge01.coef_,'v',label = "Ridge alpha=0.1")
plt.plot(lr.coef_,'o',label = 'LinearRegression')
plt.xlabel('Coefficient indx')
plt.ylabel('Coefficient magnitude')
plt.hlines(0,0,len(lr.coef_))
plt.ylim(-25,25)
plt.legend()
plt.show()
# 绘制 岭回归和特征个数的关系图
plt.figure()
mglearn.plots.plot_ridge_n_samples()